# port: 7891 # HTTP(S) 代理服务器端口
# socks-port: 7892 # SOCKS5 代理端口
mixed-port: 7890 # HTTP(S) 和 SOCKS 代理混合端口
# redir-port: 7893 # 透明代理端口，用于 Linux 和 MacOS

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7895

allow-lan: true # 允许局域网连接
# bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 clash 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

mode: rule

log-level: debug # 日志等级 silent/error/warning/info/debug

ipv6: false # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录

# tls:
#   certificate: string # 证书 PEM 格式，或者 证书的路径
#   private-key: string # 证书对应的私钥 PEM 格式，或者私钥路径
#   custom-certifactes:
#     - |
#       -----BEGIN CERTIFICATE-----
#       format/pem...
#       -----END CERTIFICATE-----

external-controller: 127.0.0.1:9090 # RESTful API 监听地址
# external-controller-tls: 0.0.0.0:9443 # RESTful API HTTPS 监听地址，需要配置 tls 部分配置文件
# secret: "123456" # `Authorization:Bearer ${secret}`

# tcp-concurrent: true # TCP 并发连接所有 IP, 将使用最快握手的 TCP
# external-ui: /path/to/ui/folder # 配置 WEB UI 目录，使用 http://{{external-controller}}/ui 访问

# interface-name: en0 # 设置出口网卡

# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 可选： "chrome","firefox","safari","ios","random","none" options.
# Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: chrome

# routing-mark:6666 # 配置 fwmark 仅用于 Linux
# experimental:

# 类似于 /etc/hosts, 仅支持配置单个 IP
# hosts:
# '*.clash.dev': 127.0.0.1
# '.dev': 127.0.0.1
# 'alpha.clash.dev': '::1'
# test.com: [1.1.1.1, 2.2.2.2]
# clash.lan: clash # clash 为特别字段，将加入本地所有网卡的地址
# baidu.com: google.com # 只允许配置一个别名

# 缓存设置(文件位置./cache.db)
profile: # 存储 select 选择记录
  store-selected: true
  # 持久化 fake-ip
  store-fake-ip: true

#【Meta专属】TCP连接并发，如果域名解析结果对应多个IP
tcp-concurrent: false

# 统一延迟
# 更换延迟计算方式,去除握手等额外延迟
# 可选值 true/false
unified-delay: true

# GEO数据模式
#【Meta专属】更改geoip使用文件,mmdb或者dat,可选true / flase,true为dat,此项有默认值flase
geodata-mode: true

# GEO文件加载模式¶
# standard：标准加载器
# memconservative：专为内存受限(小内存)设备优化的加载器(默认值)
geodata-loader: memconservative

#自定义 geodata url
# geox-url:
#   geoip: "https://cat.makaflow.com/api/resource/geodat/geoip.dat"
#   geosite: "https://cat.makaflow.com/api/resource/geodat/geosite.dat"
#   mmdb: "https://cdn.jsdelivr.net/gh/Hackl0us/GeoIP2-CN@release/Country.mmdb"
geox-url:
  geoip: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip-lite.dat
  geosite: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite-lite.db
  mmdb: https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country-lite.mmdb

geo-auto-update: true
geo-update-interval: 24

tun:
  enable: true
  stack: system
  auto-route: true
  auto-detect-interface: true
  dns-hijack:
    - any:53

# DNS 服务器配置
# 极其复杂 其需要配合上方的sniff嗅探才能很好的
# 防止污染 分流
dns:
  enable: true #DNS服务器开关(false/true)
  ipv6: false #IP6解析开关；如果为false，将返回ip6结果为空
  listen: :53
  # DNS模式(redir-host/fake-ip)
  # redir-host传递域名，可远程解析 【Meta专属】
  # enhanced-mode: redir-host
  enhanced-mode: redir-host

  #Fake-IP解析地址池
  fake-ip-range: 198.18.0.1/16
  # 针对fake-ip的模式的设置
  # 在以下列表的域名将不会被解析为 fake ip，这些域名相关的解析请求将会返回它们真实的 IP 地址
  fake-ip-filter:
    - '*.lan'
    - localhost.ptlogin2.qq.com

  # 仅填写 DNS 服务器的 IP 地址, 解析非IP的dns用的dns服务器,只支持纯IP
  # tls协议 即DoT，dns over tls，默认端口是853
  # DoH，DNS over http，默认端口是443
  default-nameserver:
    - 223.5.5.5
  # nameserver:
    # - https://doh.pub/dns-query
    # - https://dns.alidns.com/dns-query
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  
  # ===================================================================
  #  回落服务设置，针对污染问题而设计
  # ====================================================================
  # 回落DNS服务器过滤
  # geoip为真时，不匹配为geoip规则的使用fallback返回结果
  # ipcidr列表中的ip使用fallback返回解析结果
  # fallback:
  #   - tls://8.8.4.4
  #   - tls://1.1.1.1
  # fallback-filter:
  #   geoip: true
  #   geoip-code: CN
  #   ipcidr:
  #     - 240.0.0.0/4


